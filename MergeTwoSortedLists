You are given the heads of two sorted linked lists list1 and list2.

Merge the two lists in a one sorted list. The list should be made by splicing together the nodes of the first two lists.

Return the head of the merged linked list.

Input: list1 = [1,2,4], list2 = [1,3,4]
Output: [1,1,2,3,4,4]


Solution:

class ListNode:
    def __init__(self, val=0, next=None):
        self.val = val
        self.next = next

def mergeTwoLists(list1, list2):
    # Create a dummy node as the head of the merged list
    dummy = ListNode()
    current = dummy
    while list1 and list2:
        if list1.val <= list2.val: #if the values are equal, merge the values from list1 into the merged list
            current.next = list1
            list1 = list1.next
        else: 
            current.next = list2
            list2 = list2.next
        current = current.next
    # Append the remaining nodes from list1 or list2, if any
    current.next = list1 if list1 else list2
    
    # Return the head of the merged list (skip the dummy node)
    return dummy.next
#if list1 or list2 are empty, then append the rest of the nonempty elements to the merged list automatically.







