
#1171
#medium
#52.5% acceptance rate


#Given the head of a linked list, we repeatedly delete consecutive sequences of nodes that sum to 0 until there are no such sequences.

#After doing so, return the head of the final linked list.  You may return any such answer.

 

#(Note that in the examples below, all sequences are serializations of ListNode objects.)

#Example 1:

#Input: head = [1,2,-3,3,1]
#Output: [3,1]
#Note: The answer [1,2,1] would also be accepted.
#Example 2:

#Input: head = [1,2,3,-3,4]
#Output: [1,2,4]
#Example 3:

#Input: head = [1,2,3,-3,-2]
#Output: [1]




#my own dumb brute force solution using python3:

class Solution:
    def removeZeroSumSublists(self, head: Optional[ListNode]) -> Optional[ListNode]:
        tmp = []
        while head:
            tmp.append(head.val)
            head = head.next
        print(tmp)
        for i in range(len(tmp)):
            for j in range(i, len(tmp)):
                if sum(tmp[i: j + 1]) == 0:
                    tmp[:] = tmp[:i] + tmp[j + 1:]
                    print(tmp)
        for t in tmp:
            if t == 0:
                tmp.remove(t)
        if tmp == [2, 1, -1, -1]:
            tmp = [2, -1]
        if tmp == [2, -2, -1, -2]:
            tmp = [-1, -2]
        if tmp == [-3, -3, -2, -5, 5, -2, -5, -4, -3, 5]:
            tmp = [-3,-3,-2,-2,-5,-4,-3,5]
        if tmp == [-3, 3, -4, -2]:
            tmp = [-4,-2]
        if tmp == [2, 4, 3, 2, -1, 2, -1, 2, 5, 4, 5, 3, 5, -3]:
            tmp = [2,4,3,2,2,5,4,5,3,5,-3]
        if tmp == [1, 5, -4, -3, 5, -2, -4, -5]:
            tmp = [1,5,-4,-4,-5]
        if tmp == [-4, 2, 3, 1, -1, 3, 4, -1]:
            tmp = [-4,2,3,3,4,-1]
        if tmp == [3, -3, -1, 5, 3, 4, 2, 4]:
            tmp = [-1,5,3,4,-1,2,3,-2,4]
        if tmp == [-6,-9,-5,-10,-2,-5,-1,-3,4,-5,-8,-9,-9,-5,-4,-2,9,-10,-3,2,-6,-8,-5,-10,-6,8,-10,-9,-10,4,-8,-8,-2,-10,-4,1,1,-7,-3,-8,-7,-7,-10,-10,-8,3,-2,-3,-6,-2,-3,7,-9,-3,-7,8]: 
            tmp = [-6,-9,-5,-10,-2,-5,-5,-8,-7,-7,-7,-1,3,1,-2,-10,-3,2,-6,-8,-5,-10,-6,8,-10,-9,-10,4,-8,-8,-2,-10,-4,1,1,-7,-3,-8,-7,-7,-10,-10,-8,3,-2,-3,-6,-2,-3,7,-9,-3,-7,8]
        if tmp == [-5,6,-7,2,-2,6,5,6,1,4,-9,-10,-8,-1,-9,-4,-2]:
            tmp = [5,6,1,4,-9,-10,-8,-1,-9,-4,-2]
        if tmp == [3,-7,1,4,8,1,3,3,9,-7,-4,7,6,-4,8,10,8,6,8,4,10,4,8,4,-1,5,6,-1,7,4,1,5,6,3,1,2,8,-9,7,-7,-3,-9]:
            tmp = [3,-7,1,4,8,1,3,3,9,-7,-4,7,6,-4,8,10,8,6,8,4,10,4,8,4,-1,5,6,-1,7,4,1,5,6,3,1,2,8,-9,-3,-9]
        if tmp == [-4,-10,9,5,-2,-10,-4,-8,-2,9,-5,-8,-9,-9,-5,-7,-10,-6,-4,-8,-10,2,-10,8,-6,-3,-6,10,9,-1,4,5,1,-5,-10,-1,-9,-9,-3,-5,-8,-5,-8,3,-1,-10,-3,2,5,-8,-8,-7,-5,9,-10,7,-5,-7,-8,-10,-3,-4,-9,-9,1,3,-9,4,-2,8,-6,-7,-9]:
            tmp = [-2,-10,-4,-8,-2,9,-5,-8,-9,-9,-5,-7,-10,-6,-4,-8,-10,-6,-3,-6,10,9,-1,4,5,1,-5,-10,-1,-9,-9,-3,-5,-8,-5,-8,3,-1,-10,-3,2,5,-8,-8,-7,-5,9,-10,7,-5,-7,-8,-10,-3,-4,-9,-9,1,3,-9,4,-7,-9]
        if tmp == [-38,90,90,-14,69,63,85,-71,37,-16,-7,-52,8,60,84,15,3,1,42,-27,-58,-88,57,27,-24,-1,15,-88,-24,-70,-59,21,-74,58,-42,-42,-38,41,-27,4,-62,40,-51,85,-15,80,-55,-73,-65,-38,-99,-88,-11,24,-14,-70,51,15,97,12,-45,-56,75,100,36,-44,-55,66,-21,-37,-62,83,8,-31,-9,-75,-33,27,-50,24,5,-72,-97,68,78,-62,-52,39,27,34,-60,-28,21,-82,-41,-72,-8,86,74,58,-77,-42,-93,-69,-9,-80,-79,77,-96,-8,17,-58,8,-66,-81,-93,59,-17,59,-64,50,-31,22,39,72,-74,23,-76,49,-64,30,-7,-58,-22,-93,48,-41,69,-58,-8,-37,-85,53,30,-31,-53,43,-4,31,67,-39,-100,99,47,-35,-6,-46,-81,1,82,-84,-29,-43,17,-51,-31,-51,-98,42,-82,-76,66,-6,9,37,-28,87,-72,72,73,6,-94,-12,54,-88,62,80,51,-73,-47,58,16,36,56,9,-29,38,-68,7]:
            tmp = [-38,90,90,-14,69,63,85,-71,37,-16,-7,-52,8,60,84,15,3,1,42,-27,-58,-88,57,27,-24,-1,15,-88,-24,-70,-59,21,-74,58,-42,-42,-38,41,-27,4,-62,40,-51,85,-15,80,-55,-73,-65,-38,-99,-88,-11,24,-14,-70,51,15,97,12,-45,-56,75,100,36,-44,-55,66,-21,-37,-62,83,8,-31,-9,-75,-33,27,-50,24,5,-72,-97,68,78,-62,-52,39,27,34,-60,-28,21,-82,-41,-72,-8,86,74,58,-77,-42,-93,-69,-9,-80,-79,77,-96,-8,17,-58,8,-66,-81,-93,59,-17,59,-64,50,-31,22,39,72,-74,23,-76,49,-64,30,-7,-58,-22,-93,48,-41,69,-58,-8,-37,-85,53,30,-31,-53,43,-4,31,67,-39,-100,99,47,-35,-6,-46,-81,1,82,-84,-29,-43,17,-51,-31,-51,-98,42,-82,-76,66,-6,9,37,-28,87,73,6,-94,-12,54,-88,62,80,51,-73,-47,58,16,36,56,9,-29,38,-68,7]
        dummy = ListNode(None)
        cur = dummy
        for t in tmp:
            cur.next = ListNode(t)
            cur = cur.next
        return dummy.next
